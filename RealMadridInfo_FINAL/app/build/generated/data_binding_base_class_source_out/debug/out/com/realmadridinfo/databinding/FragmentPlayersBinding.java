// Generated by data binding compiler. Do not edit!
package com.realmadridinfo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.realmadridinfo.R;
import com.realmadridinfo.ui.main.players.PlayersViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentPlayersBinding extends ViewDataBinding {
  @NonNull
  public final Guideline glBottom;

  @NonNull
  public final Guideline glEnd;

  @NonNull
  public final Guideline glStart;

  @NonNull
  public final Guideline glTop;

  @NonNull
  public final ProgressBar pbProgress;

  @NonNull
  public final RecyclerView rvPlayers;

  @Bindable
  protected PlayersViewModel mViewModel;

  protected FragmentPlayersBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Guideline glBottom, Guideline glEnd, Guideline glStart, Guideline glTop,
      ProgressBar pbProgress, RecyclerView rvPlayers) {
    super(_bindingComponent, _root, _localFieldCount);
    this.glBottom = glBottom;
    this.glEnd = glEnd;
    this.glStart = glStart;
    this.glTop = glTop;
    this.pbProgress = pbProgress;
    this.rvPlayers = rvPlayers;
  }

  public abstract void setViewModel(@Nullable PlayersViewModel viewModel);

  @Nullable
  public PlayersViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentPlayersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_players, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPlayersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentPlayersBinding>inflateInternal(inflater, R.layout.fragment_players, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentPlayersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_players, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPlayersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentPlayersBinding>inflateInternal(inflater, R.layout.fragment_players, null, false, component);
  }

  public static FragmentPlayersBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentPlayersBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentPlayersBinding)bind(component, view, R.layout.fragment_players);
  }
}
